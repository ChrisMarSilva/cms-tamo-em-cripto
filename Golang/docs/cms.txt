

Cadastro de Rede
Cadastro de Carteira 
	lista de criptomoedas
		lista de operações

CMS MetaMask: 0x14FF45f32E38C56BfCc922558e11c8cffd0A9F67

ether scan
	https://etherscan.io/myaccount
	API Key Token: TD9IT5JZY13SS5BC6TEYH88ECI5P71I4WE
	API calls per second: 5 calls

polygon scan 
	https://polygonscan.com/myaccount
	API Key Token: T56M5H2PRIZYDIXRKDZYFSVX4BVKSA21GD
	API calls per second: 5 calls
	
	

rede: Polygon
carteira: 0x78D49AfD9Dab837c2CF7af2a47Bafe3EFc1BD10b
site: picnic

	
	
	

Nome personalizado: Picnic
Identificação da carteira: MetaMask
Endereço da Wallet: 0x78d49afd9dab837c2cf7af2a47bafe3efc1bd10b
Classificação da carteira: Wallet / Exchange Internacional / Exchange Nacional



Total de Compras
Total Atual
Lucro/Prejuizo
Valorização(%)
Resultado (Lucro + Valorização)
Variação diária da carteira(%)


Cripo
Qtd
T. Compras
P. Médio
Cotação
24h%
T. Atual
Valorização(%)
Lucro/Prejuizo
% Carteira




Recompensa Stake/Farm/Pool
14/04/2024
10:49




0x0000000000000000000000000000000000000000
4.600,00000000  BRLA

Dólar compra/venda no dia: R$ 5,1358 / R$ 5,1364
Valor p/ limite de isenção da IN1888: R$ 0,00
O lucro sobre  é zero porque você não possuía quantidade suficiente da moeda nesta data.




Swap
11/04/2024
15:11

0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae
- 1.500,00000000  BRLA / WETH + 0,08307705

Dólar compra/venda no dia: R$ 5,0759 / R$ 5,0765
Preço de venda BRLA: R$ 0,995000000000 ($ 0,196001181917)
Total Venda BRLA: R$ 1.492,50
Lucro sobre BRLA: R$ 1.492,50
Valor p/ limite de isenção da IN1888: R$ 1.492,50



Mês / Controle Isenção IN1888  / Controle isenção de I.R.  / Lucro de Vendas / IR de 15% / pagar DARF até... / Lucro (-Prejuízos) de Vendas / Lucro Anual / IR de 15% 
12/2024 / R$ 0,00 / R$ 0,00 / R$ 0,00 / R$ 0,00 / R$ 3.158,68 / R$ 473,80






.
├── api            # Directory for exposing external API interfaces, typically containing proto files and generated *.pb.go files. The directory structure is typically in the form `api/xxx/v1`, where v1 indicates the version.
├── assets         # Store various static resources, such as images, markdown files, etc.
├── cmd            # Program entry directory
│    └── serviceName
│         ├── initial     # Program initialization, consisting of three files: initApp initializes configurations, registerServers registers services (HTTP or grpc), and registerClose registers resource cleanup.
│         └── main.go     # Program entry file
├── configs        # Directory for configuration files
├── deployments    # Directory for deployment scripts, supporting Bare Metal, Docker and Kubernetes deployments.
│   ├─ binary
│   ├─ docker-compose
│   └─ kubernetes
├─ docs            # Directory for API interface Swagger documentation.
├── i(I)nternal       # Directory for business logic code, if the first letter is lowercase (internal), it means private code, if the first letter is capitalised (Internal), it means it can be reused by other code.
│    ├── cache        # Cache directory wrapped around business logic.
│    ├── config       # Directory for Go structure configuration files.
│    ├── dao          # Data access directory.
│    ├── ecode        # Directory for system error codes and custom business error codes.
│    ├── handler      # Directory for implementing HTTP business functionality (specific to web services).
│    ├── model        # Database model directory.
│    ├── routers      # HTTP routing directory.
│    ├── rpcclient    # Directory for client-side code that connects to grpc services.
│    ├── server       # Directory for creating services, including HTTP and grpc.
│    ├── service      # Directory for implementing grpc business functionality (specific to grpc services).
│    └── types        # Directory for defining request and response parameter structures for HTTP.
├── pkg            # Directory for shared libraries.
├── scripts        # Directory for scripts, including compilation, execution, code generation, and deployment scripts.
├── test           # Directory for scripts required for testing services  and test SQL.
└── third_party    # Directory for external helper programs, forked code, and other third-party tools.

