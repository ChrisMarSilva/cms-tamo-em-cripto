version: "3.8"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1

# volumes:
  # pg-data:
  # pg-config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./configs/pg-config
  # pg-script:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./scripts

services:

  db:
    image: postgres:latest
    hostname: db
    restart: always
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data # - pg-data:/var/lib/postgresql/data
      - ./configs/postgres.conf:/etc/postgresql/postgresql.conf # - pg-config:/etc/postgresql
      - ./scripts/script.sql:/docker-entrypoint-initdb.d/script.sql
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"] #entrypoint: [ "docker-entrypoint.sh", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-U",
          "postgres",
          "-h",
          "rinha"
        ]
      interval: 15s
      timeout: 25s
      retries: 3
      start_period: 10s
      # deploy:
      # resources:
      # limits:
      # cpus: "0.8" # '0.75' # '0.4' # '1.0'
      # memory: "2.5GB" # '1.5GB' # '1.8GB' # '1.7GB'

  api01: &api
    build:
      context: .
    hostname: api01
    restart: on-failure
    environment:
      - GO_ENVIRONMENT=production
      - DATABASE_DRIVER=postgres
      - DATABASE_URL=host=db port=5432 user=admin password=123 dbname=rinha sslmode=disable
      - DATABASE_MAX_CONNECTIONS=100
      - MENSAGEM="Teste via Docker Compose - api01"
      - PORT=80
    depends_on:
      db:
        condition: service_healthy
    # command: app -max_queue_size=10000 -batch_size=1000 -batch_sleep=2000
      # deploy:
      # resources:
      # limits:
      # cpus: "0.3" #  '0.25'  # '0.5' #  '0.1'  # '0.125'
      # memory: "350MB" # '0.5GB' # '0.5GB' # '0.15GB' # '0.35GB'

  api02:
    <<: *api
    hostname: api02
    restart: on-failure
    environment:
      - GO_ENVIRONMENT=production
      - DATABASE_DRIVER=postgres
      - DATABASE_URL=host=db port=5432 user=admin password=123 dbname=rinha sslmode=disable
      - DATABASE_MAX_CONNECTIONS=100
      - MENSAGEM="Teste via Docker Compose - api02"
      - PORT=80
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.25.4-alpine
    restart: always
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=9999
    ports:
      - "9999:9999"
    depends_on:
      - api01
      - api02
      # deploy:
      # resources:
      # limits:
      # cpus: "0.1" # '0.25' # '0.1' # '0.2'  '0.15'
      # memory: "100MB" # '0.5GB' # '0.2GB' # '0.5GB' '0.5GB'
